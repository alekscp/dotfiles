# Ctrl-s prefix key. Default => C-b. Send C-a with repeat option via C-a C-a
unbind C-b
set -g prefix C-a
bind -r C-a send-prefix

# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set-option -g status-keys "emacs"

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Status bar
set -g status-left '[#S]'
set -g status-left-length 40
set -g status-right "#(date '+%a, %b %d - %I:%M') "
set-window-option -g window-status-format ' #I: #(pwd="#{pane_current_path}"; echo ${pwd####*/})#F '
set-window-option -g window-status-current-format ' #I: #(pwd="#{pane_current_path}"; echo ${pwd####*/})#F '

# active window title colors
set-window-option -g window-status-style dim
set-window-option -g window-status-current-style fg="#fff9c4",bright

# clock
set -g clock-mode-style 12

# Set focus-events on (important for Neovim autoread)
set-option -g focus-events on
# default statusbar colors
set -g status-style bg="#424242",fg="#e0e0e0"

# border colours
set -g pane-border-style fg="#37474f",
set -g pane-active-border-style fg="#9ccc65"
set -g pane-active-border-style bg=default

# More intuitive keybindings for splitting
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key | split-window -h  -c '#{pane_current_path}'

# Spawn new window
bind c new-window -c '#{pane_current_path}'

# Set windowlist/selector colors
set -wg mode-style bg="#f06292",fg="#f5f5f5"

# Start window numbering at 1
set-option -g base-index 1

# Renumber windows after removing one
set-option -g renumber-windows on

# Use 256 colors and true color
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',screen-256color:RGB'

# Keep plenty of history for scrollback
set -g history-limit 10000

set -g mouse on

# Mac OS Sierra fix for copy/pasting
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Break pane
bind-key b break-pane -d

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# C-a C-k to clear the terminal screen
bind-key C-k send-keys -R \; send-keys C-l \; clear-history

# Killing sessions
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Bind resizing of panes to H,J,K,L
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Source .tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Debug
set-option -g display-time 4000
