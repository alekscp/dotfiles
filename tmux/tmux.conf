# Ctrl-a prefix key. Default => C-b. Send C-a with repeat option via C-a C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Status bar
set -g status-left '[#S]'
set -g status-left-length 40
set -g status-right "#(date '+%a, %b %d - %I:%M') "
set-window-option -g window-status-format ' #I: #(pwd="#{pane_current_path}"; echo ${pwd####*/})#F '
set-window-option -g window-status-current-format ' #I: #(pwd="#{pane_current_path}"; echo ${pwd####*/})#F '

# active window title colors
set-window-option -g window-status-style dim
set-window-option -g window-status-current-style fg="#f6c177",bright

# default statusbar colors
set -g status-style bg="#56526e",fg="#e0def4"

# border colours
set -g pane-border-style fg=colour235,bg=default
set -g pane-active-border-style fg=colour51,bg=default


# Set windowlist/selector colors
set -wg mode-style bg="#f06292",fg="#f5f5f5"

# Use 256 colors and true color
# set-option -sa terminal-overrides ",screen-256color*:Tc"
# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# clock
set -g clock-mode-style 12

# More intuitive keybindings for splitting
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key | split-window -h  -c '#{pane_current_path}'

# Spawn new window
bind c new-window -c '#{pane_current_path}'

# Start window numbering at 1
set -g base-index 1

# Renumber windows after removing one
set -g renumber-windows on

# Keep plenty of history for scrollback
set -g history-limit 10000

# Mouse mode on
set -g mouse on

# Enable focus events
set-option -g focus-events on

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '

# Default to incremental search in copy-mode
bind-key  -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key  -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""
bind-key / copy-mode\; command-prompt -i -p "search up" "send -X search-backward-incremental "%%%""

# C-a C-k to clear the terminal screen
bind-key C-k send-keys -R \; send-keys C-l \; clear-history

# Bind resizing of panes to H,J,K,L
bind-key -n S-Left resize-pane -L 2
bind-key -n S-Right resize-pane -R 2
bind-key -n S-Down resize-pane -D 1
bind-key -n S-Up resize-pane -U 1

# Source .tmux.conf
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state=,tty=,comm= | grep -iqE '^[^TXZ ]+ +#{s|/dev/||:pane_tty}\s+(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l
